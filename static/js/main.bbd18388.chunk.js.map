{"version":3,"sources":["serviceWorker.js","redux/actions/userAdapter.js","views/pages/LoginPage.js","views/pages/SignupPage.js","redux/actions/tweetActions.js","redux/actions/tweetAdapter.js","views/components/Tweet.js","views/components/Popup.js","views/containers/UpvotedTweetsContainer.js","views/containers/UserSettingsContainer.js","views/components/TopicsNav.js","redux/actions/topicActions.js","views/pages/ProfilePage.js","redux/hocs/withAuth.js","views/containers/TweetsContainer.js","views/containers/HashtagsContainer.js","redux/actions/hashtagAdapter.js","redux/actions/hashtagActions.js","views/pages/HomePage.js","views/pages/index.js","views/components/Nav.js","views/components/Header.js","App.js","redux/reducers/tweetReducer.js","redux/reducers/hashtagReducer.js","redux/reducers/userReducer.js","redux/reducers/topicReducer.js","redux/reducers/index.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","url","users_url","userLoginAction","username","password","dispatch","a","type","fetch","method","headers","Accept","body","JSON","stringify","res","json","data","localStorage","token","error","getCurrentUserAction","user","Authorization","response","status","Error","response_1","message","LoginPage","state","handleSubmit","e","preventDefault","props","login","then","history","push","handleChange","setState","target","name","value","this","onSubmit","onChange","React","Component","mapDispatchToProps","connect","currentUser","SignupPage","event","signup","className","getCurrentUser","getTweetsSuccess","tweets","getTweetsFailure","tweets_url","getTweetsAction","getTopicTweetsAction","topic","new_topic","toLowerCase","split","join","filteredTweets","filter","tweet","console","log","getNewsAction","Tweet","handleClick","setCurrentTweet","handleDelete","deleteTweet","src","profile_img_url","onClick","user_name","handle","fromNow","created_at","content","media_obj","media_url","url_obj","expanded_url","size","upvotedTweetsId","includes","id","downvoteTweet","upvoteTweet","style","background","catch","current_user","upvoted_tweets","map","Popup","onToggle","currentTweet","Modal","isOpen","tweet_id","placeholder","getTweets","getTopic","getNews","UpvotedTweetsContainer","show","setTweet","upvotedTweets","key","userSettingsContainer","updateCurrentUser","newUsername","withRouter","TopicsNav","setTopic","innerText","getTopicTweets","goHome","ProfilePage","UserSettingsContainer","withAuth","WrappedComponent","Something","TweetsContainer","HashtagsContainer","getHashtagSearch","getHashtags","hashtags","hashtag","keyword","getHashtagsFailure","HomePage","Nav","onLogout","clear","logout","to","Header","App","exact","path","component","Pages","LogoutPage","defaultState","userReducer","action","loading","topicReducer","rootReducer","combineReducers","middleware","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbd18388.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const url = \"https://thegoodgood.herokuapp.com/\";\nconst users_url = `${url}/users`;\n\n//-------------------------------- NEW USER SIGNUP\nexport const userSignupAction = ( username, password ) => async ( dispatch ) => {\n  dispatch( { type: \"SIGNUP_REQUEST_START\" } );\n  try {\n    const res = await fetch( `${url}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify( {\n        username: username,\n        password: password,\n      } ),\n    } );\n    const data = await res.json();\n    localStorage.token = data.token;\n    dispatch( { type: \"SIGNUP_REQUEST_SUCCESS\" } );\n  }\n  catch ( error ) {\n    dispatch( { type: \"SIGNUP_REQUEST_FAILURE\", error: error } );\n  }\n};\n\n//-------------------------------- USER LOGIN\nexport const userLoginAction = ( username, password ) => async ( dispatch ) => {\n  dispatch( { type: \"LOGIN_REQUEST_START\" } );\n  try {\n    const res = await fetch( `${url}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify( {\n        username: username,\n        password: password,\n      } ),\n    } );\n    const data = await res.json();\n    localStorage.token = data.token;\n    dispatch( { type: \"LOGIN_REQUEST_SUCCESS\" } );\n  }\n  catch ( error ) {\n    dispatch( { type: \"LOGIN_REQUEST_FAILURE\", error: error } );\n  }\n};\n\n//-------------------------------------- CURRENT USER\nexport const getCurrentUserAction = ( user ) => async ( dispatch ) => {\n  dispatch( { type: \"GET_PROFILE_REQUEST_START\" } );\n\n  try {\n    const response = await fetch( `${url}/profile`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`,\n        Accept: \"application/json\",\n      },\n    } );\n    if ( response.status === 401 ) {\n      throw new Error( \"Unauthorized\" );\n    }\n    const response_1 = response;\n    const data = await response_1.json();\n    if ( data.message === \"Please log in\" ) {\n      throw new Error( \"Unauthorized\" );\n    }\n    const user = data;\n    //argument of user\n    dispatch( {\n      type: \"GET_PROFILE_REQUEST_SUCCESS\",\n      user: user,\n    } );\n  }\n  catch ( error ) {\n    if ( error.message === \"Unauthorized\" ) {\n      dispatch( {\n        type: \"GET_PROFILE_REQUEST_FAILURE\",\n        error: error,\n      } );\n    }\n  }\n};\n\n//------------------------UPDATE CURRENT USER\nexport const updateCurrentUserAction = ( newUsername, password, id ) => async (\n  dispatch\n) => {\n  dispatch( { type: \"GET_PROFILE_REQUEST_START\" } );\n\n  try {\n    const response = await fetch( `${users_url}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify( {\n        username: newUsername,\n      } ),\n    } );\n    if ( response.status === 401 ) {\n      throw new Error( \"Unauthorized\" );\n    }\n    const response_1 = response;\n    const data = await response_1.json()\n    if ( data.message === \"Please log in\" ) {\n      throw new Error( \"Unauthorized\" );\n    }\n    const user = data;\n    //argument of user\n    dispatch( {\n      type: \"GET_PROFILE_REQUEST_SUCCESS\",\n      user: user,\n    } );\n  }\n  catch ( error ) {\n    if ( error.message === \"Unauthorized\" ) {\n      dispatch( {\n        type: \"GET_PROFILE_REQUEST_FAILURE\",\n        error: error\n      } );\n    }\n  }\n};\n\n//-------------------------------- USER LOGOUT\n\nexport const userLogoutAction = () => ( dispatch ) => {\n  localStorage.clear();\n\n  dispatch( { type: \"USER_LOGOUT\" } )\n};\n","import React from 'react';\n\nimport { connect } from 'react-redux'\nimport { userLoginAction } from '../../redux/actions/userAdapter'\n\nclass LoginPage extends React.Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  componentDidMount() {\n    if ( localStorage.token ) {\n      this.props.history.push( \"/home\" )\n    }\n  }\n\n  handleSubmit = ( e ) => {\n    e.preventDefault()\n    this.props.login( this.state.username, this.state.password )\n      .then( () => {\n\n        this.props.history.push( \"/profile\" )\n      } )\n  }\n\n  handleChange = ( e ) => {\n    this.setState( { [ e.target.name ]: e.target.value } )\n  }\n\n  render() {\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" value={this.state.username} onChange={this.handleChange} name=\"username\" />\n        <input type=\"text\" value={this.state.password} onChange={this.handleChange} name=\"password\" />\n        <input type=\"submit\" value=\"Log in!\" />\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n\n  return {\n    user: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = {\n  login: userLoginAction\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )( LoginPage )\n","import React, { Component } from \"react\"\n\nimport { connect } from \"react-redux\"\nimport {\n  userSignupAction,\n  userLoginAction,\n  getCurrentUserAction\n} from \"../../redux/actions/userAdapter\"\n\nclass SignupPage extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  componentDidMount() {\n    // if (!!localStorage.token) {\n    //   const { history } = this.props\n    //   history.push('/login')\n    // }\n  }\n\n  handleChange = event => {\n    this.setState( { [ event.target.name ]: event.target.value } )\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.signup( this.state.username, this.state.password )\n      .then( () => {\n        if ( this.props.user ) {\n          this.props.login( this.state.username, this.state.password )\n            .then( () => {\n              const { history } = this.props\n              history.push( \"/\" )\n            } )\n        }\n      } )\n  }\n\n  render() {\n\n    return (\n      <form className=\"ui form\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          name=\"username\"\n        />\n        <input\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          name=\"password\"\n        />\n        <input type=\"submit\" value=\"Sign up\" />\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  signup: userSignupAction, //() => dispatch(userSignupAction())\n  getCurrentUser: getCurrentUserAction,\n  login: userLoginAction\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)( SignupPage )\n","// import { FETCH_TWEETS,SAVE_ALL_TWEETS } from \"./types\";\n// import { FETCH_HASHTAGS,SAVE_ALL_HASHTAGS } from \"./types\";\n//\n// export const fetchTweets = tweets => ({\n//   type: \"FETCH_TWEETS\",\n//   payload: tweets\n// });\n//\n// export const saveAllTweets = tweets => ({\n//   type: \"SAVE_ALL_TWEETS\",\n//   payload: tweets\n// });\n\n\n\nconst GET_TWEETS_START = \"GET_TWEETS_START\"\nconst GET_TOPIC_TWEETS_START = \"GET_TOPIC_TWEETS_START\"\n\nexport const getTweetsStart = () => (\n  { type: GET_TWEETS_START }\n)\nexport const getTopicTweetsStart = (topic) => (\n  { type: GET_TOPIC_TWEETS_START }\n)\nexport const getTweetsSuccess = (tweets) => (\n  { type: \"GET_TWEETS_SUCCESS\", tweets: tweets }\n)\nexport const getTweetsFailure = (error) => {\n  return { type: \"GET_TWEETS_FAILURE\", error: error }\n}\n","import {\n  getTweetsStart,\n  getTopicTweetsStart,\n  getTweetsSuccess,\n  getTweetsFailure,\n} from \"./tweetActions\";\n\nimport { getTopic } from \"./topicActions\";\n\nconst tweets_url = \"https://thegoodgood.herokuapp.com/tweets\";\nconst get_tweets_url = \"https://thegoodgood.herokuapp.com/get_\";\n\n//--------------------------------------FETCH ALL TWEETS\nexport const getTweetsAction = () => async ( dispatch ) => {\n  dispatch( getTweetsStart() );\n  try {\n    const res = await fetch( tweets_url );\n    const tweets = await res.json();\n    dispatch( getTweetsSuccess( tweets ) );\n  }\n  catch ( error ) {\n    dispatch( getTweetsFailure( error ) );\n  }\n};\n\n//-----------------------FETCH BY TOPIC TWEETS\nexport const getTopicTweetsAction = ( topic ) => async ( dispatch ) => {\n\n  if ( topic !== \"On the Daily\" ) {\n    let new_topic = topic.toLowerCase().split( \" \" ).join( \"\" );\n    dispatch( getTopicTweetsStart( new_topic ) );\n    try {\n      const res = await fetch( `${get_tweets_url}${new_topic}` );\n      const tweets = await res.json();\n\n      dispatch( getTweetsSuccess( tweets ) );\n    } catch ( error ) {\n      dispatch( getTweetsFailure( error ) );\n    }\n  } else {\n    try {\n      const res = await fetch( `${tweets_url}` );\n      const tweets = await res.json()\n\n      const filteredTweets = tweets.filter( tweet => tweet.topic === \"On the Daily\" )\n      console.log( filteredTweets );\n      // \n      dispatch( getTweetsSuccess( tweets ) );\n    } catch ( error ) {\n      dispatch( getTweetsFailure( error ) );\n    }\n  }\n};\n\n//-------------FETCH NEWS\nexport const getNewsAction = () => async ( dispatch ) => {\n  dispatch( getTopicTweetsStart() );\n  try {\n    const res = await fetch( tweets_url`/news` );\n    const tweets = await res.json();\n    dispatch( getTweetsSuccess( tweets ) );\n  }\n  catch ( error ) {\n    dispatch( getTweetsFailure( error ) );\n  }\n};\n\n//-------------FETCH EMBEDDED TWEET\n\n// export const embedTweetAction = () => dispatch => {\n//   fetch(\"https://publish.twitter.com/oembed?url=https%3A%2F%2Ftwitter.com%2FInterior%2Fstatus%2F507185938620219395'\", {\n//      mode: 'no-cors',\n//      \"X-Frame-Options\": \"allow-from\"\n//    })\n//   .then(res => res.json())\n//   .then(data => {\n//     return data\n//   })\n//   .catch(error => {\n//     return error\n//     })\n// }\n\n//-----------------------UPDATE TOPIC IN THE STORE\nexport const getTopicAction = ( topic ) => ( dispatch ) => {\n  dispatch( getTopic( topic ) );\n};\n\n// -----------------------------------GET THE CURRENT TWEET\nexport const getCurrentTweetAction = ( id ) => async ( dispatch ) => {\n  dispatch( { type: \"GET_CURRENT_TWEET_START\" } );\n\n  try {\n    const res = await fetch( `${tweets_url}/${id}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`,\n      },\n    } );\n    const tweet = await res.json();\n    dispatch( { type: \"GET_CURRENT_TWEET_SUCCESS\", tweet: tweet } );\n  }\n  catch ( error ) {\n    dispatch( { type: \"GET_CURRENT_TWEET_FAILURE\", error: error } );\n  }\n};\n\n// ----------------------------------------DELETE THE CURRENT TWEET\n\nexport const deleteTweetAction = ( tweet ) => ( dispatch ) => {\n  let id = tweet.id;\n  fetch( `${tweets_url}/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${localStorage.token}`,\n    },\n  } )\n    .then( ( res ) => res.json() )\n    .then( ( tweet ) => {\n      dispatch( { type: \"DELETE_TWEET\", tweet: tweet } );\n    } )\n    .catch( ( error ) => {\n      dispatch( { type: \"GET_CURRENT_TWEET_FAILURE\", error: error } );\n    } );\n};\n\n// --------------------------------------------------UPVOTE A TWEET\n\nexport const upvoteTweetAction = ( id ) => ( dispatch ) => {\n  dispatch( { type: \"GET_CURRENT_TWEET_START\" } );\n  fetch( `${tweets_url}/${id}/upvote`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${localStorage.token}`,\n    },\n  } )\n    .then( ( res ) => res.json() )\n    .then( ( tweet ) => {\n      dispatch( { type: \"GET_CURRENT_TWEET_SUCCESS\", tweet: tweet } );\n      dispatch( { type: \"ADD_TO_UPVOTED_TWEETS\", tweet: tweet } );\n    } )\n    .catch( ( error ) => {\n      dispatch( { type: \"GET_CURRENT_TWEET_FAILURE\", error: error } );\n    } );\n};\n\nexport const downvoteTweetAction = ( id ) => async ( dispatch ) => {\n  dispatch( { type: \"GET_CURRENT_TWEET_START\" } );\n\n  const res = await fetch( `${tweets_url}/${id}/downvote`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${localStorage.token}`,\n    },\n  } );\n  const tweet = await res.json();\n  dispatch( { type: \"REMOVE_FROM_UPVOTED_TWEETS\", tweet: tweet } );\n};\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport Moment from 'react-moment'\nimport { upvoteTweetAction, downvoteTweetAction, deleteTweetAction } from \"../../redux/actions/tweetAdapter\"\nimport ReactPlayer from 'react-player'\nimport Microlink from '@microlink/react'\n\nclass Tweet extends React.Component {\n  handleClick = event => {\n    if ( this.props.setCurrentTweet ) {\n      this.props.setCurrentTweet( this.props )\n    }\n  }\n\n  handleDelete = event => {\n    this.props.deleteTweet( this.props )\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"tweet-card grid\" >\n\n        <img className=\"profile-pic\" src={this.props.profile_img_url} />\n        <div onClick={this.handleClick}>\n          <div className=\"outer-body\">\n\n            <div className=\"col-2 tweet-body\" url={this.props.url}>\n              <div className=\"tweet-row-one\">\n                <div className=\"name\"> {this.props.user_name}</div>\n                <div className=\"handle\">@{this.props.handle}</div>\n                <div className=\"created\">Created <Moment fromNow>{this.props.created_at}</Moment></div>\n              </div>\n              <div className=\"tweet-content\">{this.props.content}</div>\n              <div className=\"media\">\n                {this.props.media_obj && this.props.media_obj.type === \"photo\" ? <img className=\"media_url\" src={this.props.media_obj.media_url} />\n                  : null\n                }\n\n                {\n                  this.props.url_obj && !this.props.media_obj ? <div><Microlink className=\"news other\" url={this.props.url_obj.expanded_url} size='large' />\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div className=\"votes\">\n            {!this.props.upvotedTweetsId.includes( this.props.id ) ?\n              <button\n                className=\"upvote\"\n                onClick={() => {\n                  this.props.upvoteTweet( this.props.id )\n                }} style={{ background: \"darkseagreen\" }}\n              >👍🏾</button>\n              :\n              <button\n                className=\"downvote\"\n                onClick={() => {\n                  this.props.downvoteTweet( this.props.id )\n                }}\n              >👎🏾</button>\n            }\n          </div>\n          {\n            this.props.user.currentUser ?\n              <button className=\"delete-btn\" onClick={this.handleDelete}>Delete Tweet </button>\n\n              : null\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ( state ) => {\n  return {\n    upvotedTweetsId: state.user.current_user.upvoted_tweets.map( tweet => tweet.id ),\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  upvoteTweet: upvoteTweetAction,\n  downvoteTweet: downvoteTweetAction,\n  deleteTweet: deleteTweetAction\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)( Tweet )\n","import React from \"react\";\nimport {\n  getTweetsAction,\n  getTopicTweetsAction,\n  getNewsAction\n} from \"../../redux/actions/tweetAdapter\";\n\nimport { Modal } from \"reactstrap\";\n\nimport TweetEmbed from \"react-tweet-embed\";\n\nimport { connect } from \"react-redux\";\n\nclass Popup extends React.Component {\n  onToggle = event => {\n    this.props.onToggle && this.props.onToggle( event );\n  };\n\n  render() {\n    const tweet = this.props.currentTweet;\n    return (\n      <div id=\"tweet\" onClick={event => {\n        this.onToggle( event );\n      }}>\n        <Modal isOpen={true}>\n          <TweetEmbed id={tweet.tweet_id} placeholder={\"loading...\"} />\n\n          <button\n            onClick={event => {\n              this.onToggle( event );\n            }}\n          >\n            close\n          </button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n// <div className=\"embeddedTweet\"   >\n//  Hello\n//  <TwitterTweetEmbed\n//  tweetId={'1156297443648167937'}\n//  />\n// {this.props.children}\n// <div>\n//   <button> onClick = event =>{this.onClose(event)} close</button>\n// </div>\nconst mapStateToProps = state => {\n  return {\n    tweets: state.tweets\n  };\n};\n\nconst mapDispatchToProps = {\n  getTweets: getTweetsAction,\n  getTopic: getTopicTweetsAction,\n  getNews: getNewsAction\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)( Popup );\n","import React from \"react\";\nimport Tweet from \"../components/Tweet\";\nimport Popup from \"../components/Popup\";\nimport { getTweetsAction, getTopicTweetsAction, getNewsAction } from '../../redux/actions/tweetAdapter'\n\n\nimport { connect } from 'react-redux';\n\nclass UpvotedTweetsContainer extends React.Component {\n\n  state = {\n    currentTweet: {},\n    show: false\n  }\n\n  onToggle = () => {\n    this.setState( {\n      ...this.state, show: !this.state.show\n    } )\n  }\n\n  setTweet = ( tweet ) => {\n    this.setState( { ...this.state, show: !this.state.show } )\n    this.setState( { currentTweet: tweet } )\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"UpvotedTweetsContainer\">\n        {this.props.upvotedTweets ? this.props.upvotedTweets.map( tweet => <Tweet setCurrentTweet={this.setTweet}\n          key={tweet.id} currentTweet={this.state.currentTweet} {...tweet} />\n        ) : null}\n        {this.state.show ?\n          <Popup\n            {...this.state} currentTweet={this.state.currentTweet} onToggle={this.onToggle} />\n          :\n          null\n\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tweets: state.tweets,\n    upvotedTweets: state.user.upvoted_tweets\n  };\n};\n\nconst mapDispatchToProps = {\n  getTweets: getTweetsAction,\n  getTopic: getTopicTweetsAction,\n  getNews: getNewsAction\n}\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)( UpvotedTweetsContainer );\n","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { updateCurrentUserAction } from '../../redux/actions/userAdapter'\n\n\nclass userSettingsContainer extends React.Component {\n\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  componentDidMount() {\n    if ( localStorage.token ) {\n      this.setState( { username: this.props.user.username } )\n    }\n  }\n\n  handleChange = ( event ) => {\n    this.setState( { username: this.props.user.username } )\n    this.setState( { [ event.target.name ]: event.target.value } )\n  }\n\n  handleSubmit = ( event ) => {\n\n    event.preventDefault()\n    this.props.updateCurrentUser( this.state.username, this.state.password, this.props.user.id )\n      .then( () => {\n        this.props.history.push( \"/profile\" )\n      } )\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"userSettingsContainer\">\n\n        <div>\n          <div><h1>User Settings</h1></div>\n          <br />\n          <form className=\"ui form\" onSubmit={this.handleSubmit}>\n            <div className=\"inline field\">\n              <label>Username</label>\n              <input type=\"text\" name=\"username\" placeholder={this.props.user.username} onChange={this.handleChange} />\n            </div>\n\n            <button className=\"ui button\" type=\"submit\">Update User Settings</button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  updateCurrentUser: updateCurrentUserAction\n}\n\n\n\n\n\nexport default withRouter( connect(\n  mapStateToProps,\n  mapDispatchToProps\n)( userSettingsContainer ) )\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  getTopicAction,\n  getTopicTweetsAction,\n} from \"../../redux/actions/tweetAdapter\";\nimport { connect } from \"react-redux\";\n\nclass TopicsNav extends React.Component {\n  componentDidMount() {\n    this.props.setTopic(\"home\");\n  }\n\n  handleClick = (event) => {\n    this.props.setTopic(event.target.innerText);\n    this.props.getTopicTweets(event.target.innerText);\n  };\n\n  goHome = () => {\n    const { history } = this.props;\n    if (history) history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <div className='topicsNav'>\n        {/* <button onClick={this.handleClick}> News</button> */}\n        <button onClick={this.handleClick}>Social Commentary</button>\n        <button onClick={this.handleClick}>On the Daily</button>\n        <button className='all-tweets' onClick={this.goHome}>\n          All Tweets\n        </button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    topic: state.topic,\n  };\n};\n\nconst mapDispatchToProps = {\n  setTopic: getTopicAction,\n  getTopicTweets: getTopicTweetsAction,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(TopicsNav)\n);\n","export const getTopic = ( topic ) => ( {\n\n  type: \"GET_TOPIC\",\n  topic: topic\n} );\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { getCurrentUserAction } from \"../../redux/actions/userAdapter.js\";\nimport withAuth from \"../../redux/hocs/withAuth\";\nimport UpvotedTweetsContainer from \"../containers/UpvotedTweetsContainer\";\n\nimport UserSettingsContainer from \"../containers/UserSettingsContainer\";\nimport TopicsNav from \"../components/TopicsNav\";\n\nclass ProfilePage extends React.Component {\n  render() {\n\n    return (\n      <div className=\"profilePage\">\n        {this.props.currentUser ? (\n          <div>\n            <h3>Welcome back {this.props.currentUser.username}!</h3>\n\n            <TopicsNav />\n            <UpvotedTweetsContainer />\n            <UserSettingsContainer />\n          </div>\n        ) : (\n            <h1> Getting your profile... </h1>\n          )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n\n  return {\n    user: state.user,\n    currentUser: state.user.current_user\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    getCurrentUser: getCurrentUserAction\n  }\n}\n\nexport default withAuth(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )( withRouter( ProfilePage ) )\n)\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { getCurrentUserAction } from '../actions/userAdapter'\n\nexport default function withAuth( WrappedComponent ) {\n  class Something extends React.Component {\n    componentDidMount() {\n      if ( !localStorage.token ) {\n        this.props.history.push( \"/login\" )\n      }\n      try {\n        this.props.getCurrentUser()\n          .catch( error => {\n            this.props.history.push( \"/login\" )\n          } )\n      } catch ( error ) {\n        if ( error.message === \"Please log in\" ) {\n          this.props.history.push( \"/login\" )\n        }\n      }\n    }\n\n    render() {\n      return (\n\n        <WrappedComponent />\n\n      )\n    }\n  }\n\n\n  const mapDispatchToProps = {\n    getCurrentUser: getCurrentUserAction\n  }\n\n  return withRouter( connect( null, mapDispatchToProps )( Something ) )\n}\n","import React from \"react\";\nimport Tweet from \"../components/Tweet\"\nimport Popup from \"../components/Popup\";\nimport { getTweetsAction, getTopicTweetsAction, getNewsAction } from '../../redux/actions/tweetAdapter'\n\n\nimport { connect } from 'react-redux';\n\nclass TweetsContainer extends React.Component {\n\n  state = {\n    currentTweet: {},\n    show: false\n  }\n\n  onToggle = ( event ) => {\n\n    this.setState( {\n      ...this.state, show: !this.state.show\n    } )\n\n  }\n\n  setTweet = ( tweet ) => {\n    this.setState( { ...this.state, show: !this.state.show } )\n    this.setState( { currentTweet: tweet } )\n  }\n\n  componentDidMount() {\n    this.props.getTweets()\n  }\n\n  render() {\n\n    return (\n      <div className=\"TweetsContainer\">\n        {this.props.tweets.map( tweet => <Tweet setCurrentTweet={this.setTweet}\n          key={tweet.id} currentTweet={this.state.currentTweet} {...tweet} />\n        )}\n        {this.state.show ?\n          <Popup\n            {...this.state} currentTweet={this.state.currentTweet} onToggle={this.onToggle} />\n          :\n          null\n\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tweets: state.tweets\n  };\n};\n\nconst mapDispatchToProps = {\n  getTweets: getTweetsAction,\n  getTopic: getTopicTweetsAction,\n  getNews: getNewsAction\n}\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)( TweetsContainer );\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { getHashtagsAction, getHashtagSearchAction } from '../../redux/actions/hashtagAdapter'\n\n\nclass HashtagsContainer extends React.Component {\n\n  componentDidMount() {\n    this.props.getHashtags()\n  }\n\n  handleClick = event => {\n    this.props.getHashtagSearch( event.target.innerText )\n  }\n\n  render() {\n\n    return (\n      <div className=\"hashtagsContainer\">\n        <h2>Trending Topics</h2>\n        {this.props.hashtags.map( hashtag => <p onClick={this.handleClick} key={hashtag.id} className=\"keyword\">#{hashtag.keyword}</p> )}\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n\n  return {\n    hashtags: state.hashtags\n  }\n}\n\nconst mapDispatchToProps = {\n  getHashtags: getHashtagsAction,\n  getHashtagSearch: getHashtagSearchAction\n}\n\n\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)( HashtagsContainer );\n","import {\n  getHashtagsStart,\n  getHashtagsSuccess,\n  getHashtagsFailure\n} from \"./hashtagActions\";\nimport { getTweetsSuccess, getTweetsFailure } from \"./tweetActions\";\nconst url = \"http://localhost:3000\"\nexport const getHashtagsAction = () => dispatch => {\n  dispatch(getHashtagsStart());\n\n  return fetch(`${url}/hashtags`)\n    .then(res => res.json())\n    .then(hashtag => {\n      dispatch(getHashtagsSuccess(hashtag));\n    })\n    .catch(error => {\n      dispatch(getHashtagsFailure(error));\n    });\n};\n\nexport const getHashtagSearchAction = hashtag => dispatch => {\n  dispatch(getHashtagsStart());\n  let keyword = hashtag.split(\"#\")[1]\n  \n  return fetch(`${url}/get_hashtag_tweets`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"Application/json\",\n      Accept: \"Application/json\"\n    },\n    body: JSON.stringify({\n      keyword: keyword\n    })\n  })\n    .then(res => res.json())\n    .then(tweets => {\n      dispatch(getTweetsSuccess(tweets));\n    })\n    .catch(error => {\n      dispatch(getTweetsFailure(error));\n    });\n};\n","const GET_HASHTAGS_START = \"GET_HASHTAGS_START\"\n\nexport const getHashtagsStart = () => (\n  { type: GET_HASHTAGS_START }\n)\nexport const getHashtagsSuccess = (hashtags) => (\n  { type: \"GET_HASHTAGS_SUCCESS\", hashtags: hashtags }\n)\nexport const getHashtagsFailure = (error) => {\n  return { type: \"GET_HASHTAGS_FAILURE\", error: error }\n}\n","import React from \"react\"\n\nimport { withRouter } from 'react-router-dom'\nimport TweetsContainer from \"../containers/TweetsContainer\"\n\nimport HashtagsContainer from \"../containers/HashtagsContainer\"\nimport TopicsNav from \"../components/TopicsNav\"\n\n\n\nclass HomePage extends React.Component {\n\n\n  render() {\n\n    return (\n      <div className=\"homePage\">\n\n        <TopicsNav />\n        <TweetsContainer />\n        <HashtagsContainer />\n      </div>\n    )\n  }\n}\n\nexport default withRouter( HomePage )\n","\nimport LoginPage from './LoginPage'\nimport SignupPage from './SignupPage'\nimport ProfilePage from './ProfilePage'\nimport HomePage from './HomePage'\n\nexport default {\n  LoginPage,\n  SignupPage,\n  ProfilePage,\n  HomePage\n}\n","\nimport React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport {\n  userLogoutAction,\n  getCurrentUserAction\n} from \"../../redux/actions/userAdapter\"\n\nclass Nav extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser()\n  }\n\n  onLogout = () => {\n    localStorage.clear()\n    this.props.logout()\n    const { history } = this.props\n    history.push( '/' )\n  }\n\n  render() {\n    return (\n      <div className=\"nav\">\n        {!!localStorage.token ? (\n          //---------------WHAT A LOGGED IN USER SEES\n          <div>\n            <Link to=\"\" className=\"logout\" onClick={this.onLogout}>Logout</Link>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/profile\">Profile</Link>\n\n          </div>\n        ) : (\n            //---------------WHAT A GUEST SEES\n            <div className=\"nav\">\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/signup\">Sign Up</Link>\n              <Link to=\"/login\" className=\"login\" >Log in</Link>\n            </div>\n          )}\n      </div>\n    )\n  }\n}\n\n//------------------------HANDLE STATE/ STORE\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    username: state.user.username,\n    currentUser: state.user.currentUser\n  }\n}\n\nconst mapDispatchToProps = {\n  getCurrentUser: getCurrentUserAction,\n  logout: userLogoutAction\n}\n\nexport default withRouter( connect(\n  mapStateToProps,\n  mapDispatchToProps\n)( Nav ) )\n","import React from \"react\";\n// import \"./Header.css\";\n\n  class Header extends React.Component{\n      render(){\n          return (\n            <div>\n\n             <div className=\"header\">\n<h1 className=\"title\">THE GOOD GOOD</h1>\n               </div>\n\n                 </div>\n         );\n      }\n  }\n  export default Header;\n","import \"./App.css\";\nimport \"./views/containers/containers.css\";\nimport \"./views/components/components.css\";\nimport \"./views/pages/pages.css\";\n\nimport React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport Pages from \"views/pages\";\nimport Nav from \"views/components/Nav\";\nimport Header from \"views/components/Header\";\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Nav />\n      <Switch>\n        <Route exact path='/signup' component={Pages.SignupPage} />\n        <Route exact path='/login' component={Pages.LoginPage} />\n        <Route exact path='/logout' component={Pages.LogoutPage} />\n        <Route exact path='/home' component={Pages.HomePage} />\n        <Route exact path='/profile' component={Pages.ProfilePage} />\n        <Route component={Pages.HomePage} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const defaultState = []\n\nexport default (state = defaultState, action) => {\n\n  switch (action.type) {\n    case 'GET_TWEETS_SUCCESS':\n      return action.tweets\n    case 'DELETE_TWEET':\n      return state.filter(tweet => tweet.id !== action.tweet.id)\n    default:\n      return state\n  }\n}\n","\nconst defaultState = []\n\nexport default (state = defaultState, action) => {\n\n  switch (action.type) {\n    case 'GET_HASHTAGS_SUCCESS':\n      return action.hashtags\n    default:\n      return state\n  }\n}\n","const defaultState = {\n  id: null,\n  username: \"\",\n  upvoted_tweets: [],\n  upvotedTweetsId: []\n};\n\nconst userReducer = ( state = defaultState, action ) => {\n  switch ( action.type ) {\n    case \"LOGIN_REQUEST_START\":\n      return { ...state, loading: true };\n    case \"LOGIN_REQUEST_SUCCESS\":\n      return { ...action.user, currentUser: action.user, loading: false };\n    case \"LOGIN_REQUEST_FAILURE\":\n      return { ...state, loading: false };\n    case \"GET_PROFILE_REQUEST_SUCCESS\":\n      return { ...action.user, currentUser: action.user, loading: false } // TODO: is a return necessary here? kevin didn't use it\n    case \"ADD_TO_UPVOTED_TWEETS\":\n      return { ...state, upvoted_tweets: [ ...state.upvoted_tweets, ...state.upvotedTweetsId, action.tweet ] }\n    case \"REMOVE_FROM_UPVOTED_TWEETS\":\n      return { ...state, upvoted_tweets: state.upvoted_tweets.filter( ( tweet ) => tweet.id !== action.tweet.id ) }\n    case 'DELETE_TWEET':\n      return { ...state, upvoted_tweets: state.upvoted_tweets.filter( tweet => tweet.id !== action.tweet.id ) }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","\nconst defaultState = \"\"\n\n\nconst topicReducer = (state = defaultState, action) => {\nswitch (action.type) {\n  case \"GET_TOPIC\":\n    return { topic: action.topic};\n  case \"TOPIC_REQUEST_FAILURE\":\n    return { ...state, loading: false };\n  default:\n    return state;\n  }\n};\n\nexport default topicReducer;\n","import { combineReducers } from 'redux';\nimport tweetReducer from './tweetReducer';\nimport hashtagReducer from './hashtagReducer';\nimport userReducer from './userReducer';\nimport topicReducer from './topicReducer';\n\nexport const rootReducer = combineReducers({\n  tweets: tweetReducer,\n  hashtags: hashtagReducer,\n  user: userReducer,\n  topic: topicReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./redux/reducers\";\n\nconst defaultState = {\n\n};\n\nconst middleware = [ thunk ];\n// defaultState,\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware( ...middleware ),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport App from \"./App\";\nimport store from \"./store\"\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById( \"root\" )\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}