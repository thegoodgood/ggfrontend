{"version":3,"sources":["serviceWorker.js","redux/actions/userAdapter.js","views/pages/LoginPage.js","views/pages/SignupPage.js","views/components/Nav.js","redux/actions/tweetActions.js","redux/actions/tweetAdapter.js","views/containers/TweetsContainer.js","views/components/Popup.js","views/components/Tweet.js","views/containers/UpvotedTweetsContainer.js","views/containers/UserSettingsContainer.js","views/components/TopicsNav.js","redux/actions/topicActions.js","views/pages/ProfilePage.js","redux/hocs/withAuth.js","views/containers/HashtagsContainer.js","redux/actions/hashtagAdapter.js","redux/actions/hashtagActions.js","views/pages/index.js","views/pages/HomePage.js","views/components/Header.js","App.js","redux/reducers/tweetReducer.js","redux/reducers/hashtagReducer.js","redux/reducers/userReducer.js","redux/reducers/topicReducer.js","redux/reducers/index.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","url","users_url","concat","getCurrentUserAction","user","dispatch","type","fetch","headers","Authorization","localStorage","token","Accept","then","response","status","Error","json","data","message","catch","error","LoginPage","state","username","password","handleSubmit","e","preventDefault","_this","props","login","console","log","history","push","handleChange","setState","Object","defineProperty","target","name","value","this","react_default","a","createElement","onSubmit","onChange","React","Component","mapDispatchToProps","method","Content-Type","body","JSON","stringify","res","connect","currentUser","SignupPage","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","event","signup","inherits","createClass","key","className","Nav","onLogout","clear","logout","getCurrentUser","react_router_dom","to","onClick","getTweetsSuccess","tweets","getTweetsFailure","tweets_url","getTweetsAction","getTopicTweetsAction","topic","new_topic","toLowerCase","split","join","getNewsAction","_templateObject","TweetsContainer","currentTweet","show","onToggle","objectSpread","setTweet","tweet","getTweets","_this2","map","components_Tweet","assign","setCurrentTweet","id","components_Popup","getTopic","getNews","Popup","Modal","isOpen","tweet_embed_es","tweet_id","placeholder","Tweet","handleClick","handleDelete","deleteTweet","upvotedTweetsId","includes","downvoteTweet","upvoteTweet","style","background","src","profile_img_url","user_name","handle","dist_default","fromNow","created_at","content","entities","upvoted_tweets","UpvotedTweetsContainer","upvotedTweets","userSettingsContainer","updateCurrentUser","newUsername","withRouter","TopicsNav","setTopic","innerText","getTopicTweets","goHome","ProfilePage","components_TopicsNav","containers_UpvotedTweetsContainer","UserSettingsContainer","withAuth","WrappedComponent","Something","_React$Component","HashtagsContainer","getHashtagSearch","getHashtags","hashtags","hashtag","keyword","getHashtagsFailure","views_pages","HomePage","containers_TweetsContainer","containers_HashtagsContainer","Header","App","components_Header","components_Nav","react_router","exact","path","component","Pages","LogoutPage","defaultState","userReducer","undefined","action","loading","toConsumableArray","filter","topicReducer","rootReducer","combineReducers","middleware","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb8399b0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport {\n  CREATE_USER,\n  DELETE_USER,\n  GET_USER,\n  USER_LOGIN,\n  // USER_LOGOUT\n} from \"../actions/types\"\n\nconst url = \"http://localhost:3000\"\nconst users_url = `${url}/users`\n\n//-------------------------------- NEW USER SIGNUP\nexport const userSignupAction = (username, password) => dispatch => {\n  dispatch({ type: \"SIGNUP_REQUEST_START\" })\n  return fetch(`${url}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  })\n  .then(res => res.json())\n  .then((data) => {\n    localStorage.token = data.token\n    dispatch({ type: 'SIGNUP_REQUEST_SUCCESS' })\n  })\n  .catch(error => {\n    dispatch({ type: 'SIGNUP_REQUEST_FAILURE', error: error })\n  })\n}\n\n//-------------------------------- USER LOGIN\nexport const userLoginAction = (username, password) => dispatch => {\n  dispatch({ type: \"LOGIN_REQUEST_START\" })\n  return fetch(`${url}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  })\n  .then(res => res.json())\n  .then((data) => {\n    localStorage.token = data.token\n    dispatch({ type: 'LOGIN_REQUEST_SUCCESS' })\n  })\n  .catch(error => {\n    dispatch({ type: 'LOGIN_REQUEST_FAILURE', error: error })\n  })\n}\n\n\n//-------------------------------------- CURRENT USER\n   export const getCurrentUserAction = (user) => dispatch => {\n\n     dispatch({type: \"GET_PROFILE_REQUEST_START\"})\n\n     return fetch(`${url}/profile`, {\n       headers: {\n         \"Authorization\": `Bearer ${localStorage.token}`,\n         \"Accept\": \"application/json\"\n          }\n        }).then((response) => {\n          if (response.status === 401) {\n            throw new Error(\"Unauthorized\")\n          }\n          return response\n        }).then(response =>response.json())\n        .then((data) => {\n\n          if (data.message === \"Please log in\") {\n            throw new Error(\"Unauthorized\")\n          }\n          return data\n        }).then(user => { //argument of user\n          dispatch({\n            type: \"GET_PROFILE_REQUEST_SUCCESS\",\n            user: user\n          })\n        }).catch((error) => {\n          if (error.message === \"Unauthorized\") {\n            dispatch({\n              type: \"GET_PROFILE_REQUEST_FAILURE\",\n              error: error\n            })\n          }\n        })\n      }\n\n//------------------------UPDATE CURRENT USER\nexport const updateCurrentUserAction = (newUsername, password, id) => dispatch => {\n  console.log(newUsername);\n  dispatch({type: \"GET_PROFILE_REQUEST_START\"})\n\n  return fetch(`${users_url}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": `Bearer ${localStorage.token}`,\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: newUsername\n    })\n     }).then((response) => {\n       if (response.status === 401) {\n         throw new Error(\"Unauthorized\")\n       }\n       return response\n     }).then(response =>response.json())\n     .then((data) => {\n\n       if (data.message === \"Please log in\") {\n         throw new Error(\"Unauthorized\")\n       }\n       return data\n     }).then(user => { //argument of user\n       console.log(user)\n       dispatch({\n         type: \"GET_PROFILE_REQUEST_SUCCESS\",\n         user: user\n       })\n     }).catch((error) => {\n       if (error.message === \"Unauthorized\") {\n         dispatch({\n           type: \"GET_PROFILE_REQUEST_FAILURE\",\n           error: error\n         })\n       }\n     })\n   }\n\n   //-------------------------------- USER LOGOUT\n\n   export const userLogoutAction = () => dispatch => {\n     localStorage.clear()\n\n     dispatch({ type: \"USER_LOGOUT\" })\n   }\n","import React from 'react';\n\nimport { connect } from 'react-redux'\nimport { userLoginAction } from '../../redux/actions/userAdapter'\n\n class LoginPage extends React.Component {\n   state = {\n     username: '',\n     password: ''\n   }\n\n   componentDidMount() {\n     if (localStorage.token) {\n       this.props.history.push(\"/home\")\n     }\n   }\n\n   handleSubmit = (e) => {\n     e.preventDefault()\n     this.props.login(this.state.username, this.state.password)\n       .then(()=> {\n         console.log(this.props.username);\n         this.props.history.push(\"/profile\")\n       })\n   }\n\n   handleChange = (e) => {\n     this.setState({ [e.target.name]: e.target.value })\n   }\n\n   render() {\n     console.log(this.state.username);\n     return (\n       <form onSubmit={this.handleSubmit}>\n         <input type=\"text\" value={this.state.username} onChange={this.handleChange} name=\"username\" />\n         <input type=\"text\" value={this.state.password} onChange={this.handleChange} name=\"password\" />\n         <input type=\"submit\" value=\"Log in!\" />\n       </form>\n     );\n   }\n }\n\n const mapStateToProps = state => {\n\n   return {\n     user: state.currentUser\n   }\n }\n\n const mapDispatchToProps = {\n     login: userLoginAction\n }\n\n export default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\n","import React, { Component, PropTypes } from 'react';\n\nimport { connect } from 'react-redux'\nimport { userSignupAction, userLoginAction } from '../../redux/actions/userAdapter'\n\n\nexport class SignupPage extends Component { // eslint-disable-line react/prefer-stateless-function\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n\n  componentDidMount() {\n  if (localStorage.token) {\n    this.props.history.push(\"/home\")\n  }\n}\n\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signup(this.state.username, this.state.password)\n      .then(()=> {\n        this.props.history.push(\"/profile\")\n      })\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <form className=\"ui form\" onSubmit={this.handleSubmit}>\n        <input type=\"text\" value={this.state.username} onChange={this.handleChange} name=\"username\" />\n        <input type=\"password\" value={this.state.password} onChange={this.handleChange} name=\"password\" />\n        <input type = \"submit\" value=\"Sign up\" />\n      </form>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    user: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = {\n  signup: userSignupAction //() => dispatch(userSignupAction())\n};\n\n\n\n  export default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\n","\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  userLoginAction,\n  userLogoutAction,\n  getCurrentUserAction\n} from \"../../redux/actions/userAdapter\";\n\nclass Nav extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  onLogout = () => {\n    localStorage.clear()\n    this.props.logout();\n    const { history } = this.props;\n    history.push('/');\n  };\n\n  render() {\n    return (\n      <div className=\"nav\">\n        {!!localStorage.token ? (\n          //---------------WHAT A LOGGED IN USER SEES\n          <div>\n          <Link to=\"\" className=\"logout\" onClick={this.onLogout}>Logout</Link>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/profile\">Profile</Link>\n\n          </div>\n        ) : (\n          //---------------WHAT A GUEST SEES\n          <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/signup\">Sign Up</Link>\n            <Link to=\"/login\" className=\"login\" >Log in</Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n//------------------------HANDLE STATE/ STORE\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    username: state.user.username,\n    currentUser: state.user.currentUser\n  };\n};\n\nconst mapDispatchToProps = {\n  getCurrentUser: getCurrentUserAction,\n  logout: userLogoutAction\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Nav);\n","// import { FETCH_TWEETS,SAVE_ALL_TWEETS } from \"./types\";\n// import { FETCH_HASHTAGS,SAVE_ALL_HASHTAGS } from \"./types\";\n//\n// export const fetchTweets = tweets => ({\n//   type: \"FETCH_TWEETS\",\n//   payload: tweets\n// });\n//\n// export const saveAllTweets = tweets => ({\n//   type: \"SAVE_ALL_TWEETS\",\n//   payload: tweets\n// });\n\n\n\nconst GET_TWEETS_START = \"GET_TWEETS_START\"\nconst GET_TOPIC_TWEETS_START = \"GET_TOPIC_TWEETS_START\"\n\nexport const getTweetsStart = () => (\n  { type: GET_TWEETS_START }\n)\nexport const getTopicTweetsStart = (topic) => (\n  { type: GET_TOPIC_TWEETS_START }\n)\nexport const getTweetsSuccess = (tweets) => (\n  { type: \"GET_TWEETS_SUCCESS\", tweets: tweets }\n)\nexport const getTweetsFailure = (error) => {\n  return { type: \"GET_TWEETS_FAILURE\", error: error }\n}\n","import {\n  getTweetsStart, getTopicTweetsStart, getTweetsSuccess, getTweetsFailure\n} from './tweetActions'\n\nimport {\ngetTopic,  getTopicStart, getTopicSuccess, getTopicFailure\n} from './topicActions'\n\n\nimport {BASE_URL} from '../../apiConstants'\nconst tweets_url = \"http://localhost:3000/tweets\"\nconst get_tweets_url = \"http://localhost:3000/get_\"\nconst url = \"http://localhost:3000\"\n\n\n//--------------------------------------FETCH ALL TWEETS\n  export const getTweetsAction = () => dispatch => {\n    dispatch(getTweetsStart())\n      return fetch(tweets_url)\n      .then(res => res.json())\n      .then(tweets => {\n        dispatch(getTweetsSuccess(tweets))\n        })\n        .catch(error => {\n          dispatch(getTweetsFailure(error))\n        })\n      }\n\n//-----------------------FETCH BY TOPIC TWEETS\n      export const getTopicTweetsAction = (topic) => dispatch => {\n        let new_topic = topic.toLowerCase().split(\" \").join(\"\")\n        dispatch(getTopicTweetsStart(new_topic))\n          return fetch(`${get_tweets_url}${new_topic}`)\n          .then(res => res.json())\n          .then(tweets => {\n            dispatch(getTweetsSuccess(tweets))\n            })\n            .catch(error => {\n              dispatch(getTweetsFailure(error))\n            })\n          }\n\n//-------------FETCH NEWS\n      export const getNewsAction = () => dispatch => {\n        dispatch(getTopicTweetsStart())\n          return fetch(tweets_url`/news`)\n          .then(res => res.json())\n          .then(tweets => {\n            dispatch(getTweetsSuccess(tweets))\n            })\n            .catch(error => {\n              dispatch(getTweetsFailure(error))\n            })\n          }\n\n//-------------FETCH EMBEDDED TWEET\n\n  export const embedTweetAction = () => dispatch => {\n    fetch(\"https://publish.twitter.com/oembed?url=https%3A%2F%2Ftwitter.com%2FInterior%2Fstatus%2F507185938620219395'\", {\n       mode: 'no-cors',\n       \"X-Frame-Options\": \"allow-from\"\n     })\n    .then(res => res.json())\n    .then(data => {\n      return data\n    })\n    .catch(error => {\n      return error\n      })\n  }\n\n//-----------------------UPDATE TOPIC IN THE STORE\nexport const getTopicAction = (topic) => dispatch => {\n    dispatch(getTopic(topic))\n    }\n\n\n// -----------------------------------GET THE CURRENT TWEET\nexport const getCurrentTweetAction = (id) => dispatch => {\n  dispatch({ type: \"GET_CURRENT_TWEET_START\" })\n\n  return fetch(`${tweets_url}/${id}`, {\n    headers: {\n      \"Authorization\": `Bearer ${localStorage.token}`\n    }\n  })\n  .then(res => res.json())\n  .then(tweet => {\n    dispatch({ type: 'GET_CURRENT_TWEET_SUCCESS', tweet: tweet })\n  })\n  .catch(error => {\n    dispatch({ type: 'GET_CURRENT_TWEET_FAILURE', error: error })\n  })\n}\n\n// ----------------------------------------DELETE THE CURRENT TWEET\n\nexport const deleteTweetAction = (tweet) => dispatch => {\n  let id = tweet.id\n  fetch(`${tweets_url}/${id}`, {\n    method: 'DELETE',\n    headers: {\n      \"Authorization\": `Bearer ${localStorage.token}`\n    }\n  })\n  .then(res => res.json())\n  .then(tweet => {\n    dispatch({ type: 'DELETE_TWEET', tweet: tweet })\n  })\n  .catch(error => {\n    dispatch({ type: 'GET_CURRENT_TWEET_FAILURE', error: error })\n  })\n}\n\n// --------------------------------------------------UPVOTE A TWEET\n\nexport const upvoteTweetAction = (id) => dispatch => {\n  dispatch({ type: \"GET_CURRENT_TWEET_START\" })\n  fetch(`${tweets_url}/${id}/upvote`, {\n    method: 'POST',\n    headers: {\n      \"Authorization\": `Bearer ${localStorage.token}`\n    }\n  })\n  .then(res => res.json())\n  .then(tweet => {\n    dispatch({ type: 'GET_CURRENT_TWEET_SUCCESS', tweet: tweet })\n    dispatch({ type: 'ADD_TO_UPVOTED_TWEETS', tweet: tweet })\n  })\n  .catch(error => {\n    dispatch({ type: 'GET_CURRENT_TWEET_FAILURE', error: error })\n  })\n}\n\nexport const downvoteTweetAction = (id) => dispatch => {\n  dispatch({ type: \"GET_CURRENT_TWEET_START\" })\n\n  return fetch(`${tweets_url}/${id}/downvote`, {\n    method: 'POST',\n    headers: {\n      \"Authorization\": `Bearer ${localStorage.token}`\n    }\n  })\n  .then(res => res.json())\n  .then(tweet => {\n    dispatch({ type: 'REMOVE_FROM_UPVOTED_TWEETS', tweet: tweet })\n  })\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tweet from \"../components/Tweet\"\nimport Popup from \"../components/Popup\";\nimport {getTweetsAction,  getTopicTweetsAction, getNewsAction} from '../../redux/actions/tweetAdapter'\n\n\nimport {connect} from 'react-redux';\n\nclass TweetsContainer extends React.Component {\n\n  state = {\n    currentTweet: {},\n    show: false\n  }\n\n  onToggle= (event) => {\n\n    this.setState({\n      ...this.state, show: !this.state.show })\n      console.log(this.state.currentTweet);\n }\n\n setTweet = (tweet) => {\n   this.setState({...this.state, show: !this.state.show})\n   this.setState({currentTweet: tweet})\n }\n\n  componentDidMount() {\n    this.props.getTweets()\n      }\n\n  render() {\n    return (\n\n       <div className=\"TweetsContainer\">\n         {this.props.tweets.map(tweet =>  <Tweet setCurrentTweet={this.setTweet}\n           key={tweet.id} currentTweet={this.state.currentTweet} {...tweet} />\n         )}\n       { this.state.show ?\n           <Popup\n           {...this.state} currentTweet={this.state.currentTweet}   onToggle={this.onToggle}/>\n         :\n         null\n\n       }\n         </div>\n    )\n  }\n}\n\n  const mapStateToProps= state=> {\n    return {\n      tweets: state.tweets\n    };\n  };\n\n  const mapDispatchToProps = {\n    getTweets: getTweetsAction,\n    getTopic: getTopicTweetsAction,\n    getNews: getNewsAction\n    }\n\n\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TweetsContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tweet from \"../components/Tweet\";\nimport TweetContainer from \"../containers/TweetsContainer\";\nimport {\n  getTweetsAction,\n  getTopicTweetsAction,\n  getNewsAction\n} from \"../../redux/actions/tweetAdapter\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport TweetEmbed from \"react-tweet-embed\";\n\nimport { connect } from \"react-redux\";\n\nclass Popup extends React.Component {\n  onToggle = event => {\n    this.props.onToggle && this.props.onToggle(event);\n  };\n\n  render() {\n    const tweet = this.props.currentTweet;\n\n    console.log(tweet);\n    return (\n      <div id=\"tweet\" onClick={event => {\n        this.onToggle(event);\n      }}>\n        <Modal isOpen={true}>\n          <TweetEmbed id={tweet.tweet_id} placeholder={\"loading\"} />\n\n          <button\n            onClick={event => {\n              this.onToggle(event);\n            }}\n          >\n            close\n          </button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n// <div className=\"embeddedTweet\"   >\n//  Hello\n//  <TwitterTweetEmbed\n//  tweetId={'1156297443648167937'}\n//  />\n// {this.props.children}\n// <div>\n//   <button> onClick = event =>{this.onClose(event)} close</button>\n// </div>\nconst mapStateToProps = state => {\n  return {\n    tweets: state.tweets\n  };\n};\n\nconst mapDispatchToProps = {\n  getTweets: getTweetsAction,\n  getTopic: getTopicTweetsAction,\n  getNews: getNewsAction\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Popup);\n","import React from \"react\"\nimport Popup from \"../components/Popup\"\nimport { connect } from \"react-redux\"\nimport Moment from 'react-moment'\nimport { upvoteTweetAction, downvoteTweetAction,deleteTweetAction } from \"../../redux/actions/tweetAdapter\"\n\n//Presentation components\n// Are concerned with how things look\n// Use props for displaying everything\n// Do not manage state at all\n// Don’t emit actions, but may take callbacks that do via props\n\nclass Tweet extends React.Component {\n  handleClick = event => {\n    if (this.props.setCurrentTweet) {\n      this.props.setCurrentTweet(this.props)\n    }\n  }\n\n    handleDelete = event => {\n      this.props.deleteTweet(this.props)\n    }\n\n  render() {\n    return (\n      <div className=\"tweet-body\" >\n\n        <div className=\"votes\">\n        { !this.props.upvotedTweetsId.includes(this.props.id) ?\n          <button\n            className=\"upvote\"\n            onClick={() => {\n              this.props.upvoteTweet(this.props.id)\n            }} style={{background:\"darkseagreen\"}}\n          >👍🏾</button>\n          :\n          <button\n            className=\"downvote\"\n            onClick={() => {\n              this.props.downvoteTweet(this.props.id)\n            }}\n          >👎🏾</button>\n        }\n        </div>\n\n        <div onClick={this.handleClick}>\n          <div className=\"outer-body\">\n            <img src={this.props.profile_img_url} />\n            <div className=\"body\" url={this.props.url}>\n              <div className=\"inner-body\">\n                <div className=\"name\"> {this.props.user_name}</div>\n                <div className=\"handle\">@{this.props.handle}</div>\n                <div className=\"created\">Created <Moment fromNow>{this.props.created_at}</Moment></div>\n              </div>\n              <div className=\"tweet content\">{this.props.content}</div>\n\n              <div>{this.props.entities} </div>\n            </div>\n          </div>\n        </div>\n\n      {\n\n        this.props.currentUser ?\n          <button className=\"delete-btn\" onClick = {this.handleDelete}>Delete Tweet </button>\n\n        : null\n      }\n</div>\n    )\n  }\n}\n\nconst mapStateToProps= (state) => {\n  return {\n    upvotedTweetsId: state.user.upvoted_tweets.map(tweet=> tweet.id),\n    currentUser: state.user.currentUser.id\n  }\n}\n\nconst mapDispatchToProps = {\n  upvoteTweet: upvoteTweetAction,\n  downvoteTweet: downvoteTweetAction,\n  deleteTweet: deleteTweetAction\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tweet)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tweet from \"../components/Tweet\"\nimport Popup from \"../components/Popup\";\nimport {getTweetsAction,  getTopicTweetsAction, getNewsAction} from '../../redux/actions/tweetAdapter'\n\n\nimport {connect} from 'react-redux';\n\nclass UpvotedTweetsContainer extends React.Component {\n\n  state = {\n    currentTweet: {},\n    show: false\n  }\n\n  onToggle= (event) => {\n    this.setState({\n      ...this.state, show: !this.state.show })\n }\n\n setTweet = (tweet) => {\nthis.setState({...this.state, show: !this.state.show})\n   this.setState({currentTweet: tweet})\n }\n\n  render() {\n\n    return (\n\n       <div className=\"UpvotedTweetsContainer\">\n         {this.props.upvotedTweets.map(tweet =>  <Tweet setCurrentTweet={this.setTweet}\n           key={tweet.id} currentTweet={this.state.currentTweet} {...tweet} />\n         )}\n       { this.state.show ?\n           <Popup\n           {...this.state} currentTweet={this.state.currentTweet}   onToggle={this.onToggle}/>\n         :\n         null\n\n       }\n         </div>\n    )\n  }\n}\n\n  const mapStateToProps= state=> {\n    return {\n      tweets: state.tweets,\n      upvotedTweets: state.user.upvoted_tweets\n    };\n  };\n\n  const mapDispatchToProps = {\n    getTweets: getTweetsAction,\n    getTopic: getTopicTweetsAction,\n    getNews: getNewsAction\n    }\n\n\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UpvotedTweetsContainer);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from 'react-redux'\nimport { withRouter} from 'react-router-dom'\nimport {updateCurrentUserAction} from '../../redux/actions/userAdapter'\n\n\nclass userSettingsContainer extends React.Component {\n\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  componentDidMount() {\n  if (localStorage.token) {\n      this.setState({username: this.props.user.username})\n  }\n}\n\n  handleChange = (event) => {\n      this.setState({username: this.props.user.username})\n      this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault()\n    this.props.updateCurrentUser(this.state.username, this.state.password, this.props.user.id)\n      .then(()=> {\n        this.props.history.push(\"/profile\")\n      })\n  }\n\n\n  render() {\n\n    return (\n      <div className = \"userSettingsContainer\">\n\n    <div>\n    <div><h1>User Settings</h1></div>\n    <br/>\n      <form className=\"ui form\" onSubmit={this.handleSubmit}>\n        <div className=\"inline field\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" placeholder={this.props.user.username} onChange={this.handleChange} />\n        </div>\n    \n        <button className=\"ui button\" type=\"submit\">Update User Settings</button>\n      </form>\n       </div>\n       </div>\n    )\n  }\n}\n\n\n  const mapStateToProps = state => {\n    return {\n      user: state.user\n    }\n  }\n\n  const mapDispatchToProps = {\n    updateCurrentUser: updateCurrentUserAction\n  }\n\n\n\n\n\n  export default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(userSettingsContainer))\n","import React from \"react\"\nimport Tweet from \"../components/Tweet\"\nimport { withRouter } from \"react-router-dom\"\n\nimport {\n  getTopicAction,\n  getTopicTweetsAction\n} from \"../../redux/actions/tweetAdapter\"\nimport { getTopic } from \"../../redux/actions/topicActions\"\nimport { connect } from \"react-redux\"\n\nclass TopicsNav extends React.Component {\n  componentDidMount() {\n    this.props.setTopic(\"home\")\n  }\n\n  handleClick = event => {\n    this.props.setTopic(event.target.innerText)\n    this.props.getTopicTweets(event.target.innerText)\n  }\n\n  goHome = (event) => {\n    const { history } = this.props\n    if(history) history.push('/')\n  }\n\n  render() {\n    return (\n      <div className=\"topicsNav\">\n        <button onClick={this.handleClick}> News</button>\n        <button onClick={this.handleClick}>Social Commentary</button>\n        <button onClick={this.handleClick}>On the Daily</button>\n        <button className= \"all-tweets\" onClick={this.goHome}>All Tweets</button>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    topic: state.topic\n  }\n}\n\nconst mapDispatchToProps = {\n  setTopic: getTopicAction,\n  getTopicTweets: getTopicTweetsAction\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopicsNav))\n","const GET_TOPIC = \"GET_TOPIC\"\n\nexport const getTopic = (topic) => ({\n  \n    type: \"GET_TOPIC\",\n    topic:topic\n  });\n","import React from \"react\"\nimport Nav from \"../components/Nav\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport { getCurrentUserAction } from \"../../redux/actions/userAdapter.js\"\nimport withAuth from \"../../redux/hocs/withAuth\"\nimport Tweet from \"../components/Tweet\"\nimport Popup from \"../components/Popup\"\nimport UpvotedTweetsContainer from \"../containers/UpvotedTweetsContainer\"\n\nimport UserSettingsContainer from \"../containers/UserSettingsContainer\"\nimport TopicsContainer from \"../containers/TweetsContainer\"\nimport TopicsNav from \"../components/TopicsNav\"\n\nclass ProfilePage extends React.Component {\n  render() {\n    return (\n      <div className=\"profilePage\">\n        {this.props.currentUser ? (\n          <div>\n            <h3>Welcome back, @{this.props.user.username}</h3>\n\n            <TopicsNav />\n            <UpvotedTweetsContainer />\n            <UserSettingsContainer />\n          </div>\n        ) : (\n          <h1> Getting your profile... </h1>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    username: state.user.username,\n    currentUser: state.user.currentUser\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCurrentUser: getCurrentUserAction\n  }\n}\n\nexport default withAuth(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withRouter(ProfilePage))\n)\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport { withRouter} from 'react-router-dom'\nimport {getCurrentUserAction} from '../actions/userAdapter'\n\nexport default function withAuth(WrappedComponent) {\n  class Something extends React.Component {\n    componentDidMount() {\n      if (!localStorage.token) {\n        this.props.history.push(\"/login\")\n      }\n      try {\n        this.props.getCurrentUser()\n        .catch(error => {\n          this.props.history.push(\"/login\")\n        })\n      } catch (error) {\n        if (error.message === \"Please log in\") {\n          this.props.history.push(\"/login\")\n        }\n      }\n      }\n\n      render() {\n        return (\n\n        <WrappedComponent />\n\n      )}\n    }\n\n    // const mapStateToProps = state => {\n    //   return {\n    //     loggedIn: state.loggedIn\n    //   }\n    // }\n\n    const mapDispatchToProps = {\n      getCurrentUser: getCurrentUserAction\n    }\n\n    return withRouter(connect(null, mapDispatchToProps)(Something))\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from 'react-redux';\nimport {getHashtagsAction, getHashtagSearchAction} from '../../redux/actions/hashtagAdapter'\n\n\nclass HashtagsContainer extends React.Component {\n\n  componentDidMount() {\n    this.props.getHashtags()\n      }\n\n    handleClick = event => {\n      this.props.getHashtagSearch(event.target.innerText)\n    }\n\n  render() {\n\n    return (\n      <div className = \"hashtagsContainer\">\n      <h2>Trending Topics</h2>\n        {this.props.hashtags.map(hashtag => <p onClick={this.handleClick} key={hashtag.id} className= \"keyword\">#{hashtag.keyword}</p>)}\n       </div>\n    )\n  }\n}\n\n\n  const mapStateToProps = state => {\n    return {\n      hashtags: state.hashtags\n    }\n  }\n\n  const mapDispatchToProps = {\n    getHashtags: getHashtagsAction,\n    getHashtagSearch: getHashtagSearchAction\n  }\n\n\n\n\n\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HashtagsContainer);\n","import {\n  getHashtagsStart,\n  getHashtagsSuccess,\n  getHashtagsFailure\n} from \"./hashtagActions\";\nimport { getTweetsSuccess, getTweetsFailure } from \"./tweetActions\";\nconst url = \"http://localhost:3000\"\nexport const getHashtagsAction = () => dispatch => {\n  dispatch(getHashtagsStart());\n\n  return fetch(`${url}/hashtags`)\n    .then(res => res.json())\n    .then(hashtag => {\n      dispatch(getHashtagsSuccess(hashtag));\n    })\n    .catch(error => {\n      dispatch(getHashtagsFailure(error));\n    });\n};\n\nexport const getHashtagSearchAction = hashtag => dispatch => {\n  dispatch(getHashtagsStart());\n  let keyword = hashtag.split(\"#\")[1]\n  \n  return fetch(`${url}/get_hashtag_tweets`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"Application/json\",\n      Accept: \"Application/json\"\n    },\n    body: JSON.stringify({\n      keyword: keyword\n    })\n  })\n    .then(res => res.json())\n    .then(tweets => {\n      dispatch(getTweetsSuccess(tweets));\n    })\n    .catch(error => {\n      dispatch(getTweetsFailure(error));\n    });\n};\n","const GET_HASHTAGS_START = \"GET_HASHTAGS_START\"\n\nexport const getHashtagsStart = () => (\n  { type: GET_HASHTAGS_START }\n)\nexport const getHashtagsSuccess = (hashtags) => (\n  { type: \"GET_HASHTAGS_SUCCESS\", hashtags: hashtags }\n)\nexport const getHashtagsFailure = (error) => {\n  return { type: \"GET_HASHTAGS_FAILURE\", error: error }\n}\n","\nimport LoginPage from './LoginPage'\nimport SignupPage from './SignupPage'\nimport ProfilePage from './ProfilePage'\nimport HomePage from './HomePage'\n\nexport default {\n  LoginPage,\n  SignupPage,\n  ProfilePage,\n  HomePage\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport TweetsContainer from \"../containers/TweetsContainer\";\nimport Popup from \"../components/Popup\"\nimport HashtagsContainer from \"../containers/HashtagsContainer\";\nimport ProfilePage from \"./ProfilePage\";\nimport TopicsContainer from \"../containers/TweetsContainer\";\nimport TopicsNav from \"../components/TopicsNav\";\n\n\n\nclass HomePage extends React.Component {\n\n\n  render() {\n\n    return (\n      <div className= \"homePage\">\n        \n        <TopicsNav />\n        <TweetsContainer  />\n        <HashtagsContainer />\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from \"react\";\n// import \"./Header.css\";\n\n  class Header extends React.Component{\n      render(){\n          return (\n            <div>\n\n             <div className=\"header\">\n<h1 className=\"title\">THE GOOD GOOD</h1>\n               </div>\n\n                 </div>\n         );\n      }\n  }\n  export default Header;\n","import \"./App.css\";\nimport \"views/containers/containers.css\";\nimport \"views/components/components.css\";\nimport \"views/pages/pages.css\";\n\nimport React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport Pages from \"views/pages\";\nimport Nav from \"views/components/Nav\";\nimport Header from \"views/components/Header\";\n\n\n\n\n\n\nconst App = () => {\n  return (\n    <div>\n    <Header />\n      <Nav />\n      <Switch>\n        <Route exact path=\"/signup\"       component={Pages.SignupPage} />\n        <Route exact path=\"/login\"        component={Pages.LoginPage} />\n        <Route exact path=\"/logout\"        component={Pages.LogoutPage} />\n        <Route exact path=\"/home\"     component={Pages.HomePage} />\n        <Route exact path=\"/profile\"      component={Pages.ProfilePage} />\n        <Route component={Pages.HomePage} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;\n","const defaultState = []\n\nexport default (state = defaultState, action) => {\n\n  switch (action.type) {\n    case 'GET_TWEETS_SUCCESS':\n      return action.tweets\n    case 'DELETE_TWEET':\n      return state.filter(tweet => tweet.id !== action.tweet.id)\n    default:\n      return state\n  }\n}\n","\nconst defaultState = []\n\nexport default (state = defaultState, action) => {\n\n  switch (action.type) {\n    case 'GET_HASHTAGS_SUCCESS':\n      return action.hashtags\n    default:\n      return state\n  }\n}\n","import {\n  CREATE_USER,\n  DELETE_USER,\n  GET_USER,\n  GET_CURRENT_USER,\n  USER_LOGIN,\n  USER_LOGOUT\n} from \"../actions/types\";\n\nconst defaultState = {\n  id: null,\n  username: \"\",\n  upvoted_tweets:[]\n};\n\nconst userReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST_START\":\n      return { ...state, loading: true };\n    case \"LOGIN_REQUEST_SUCCESS\":\n      return { ...action.user,currentUser:action.user, loading: false };\n    case \"LOGIN_REQUEST_FAILURE\":\n      return { ...state, loading: false };\n    case \"GET_PROFILE_REQUEST_SUCCESS\":\n    return {...action.user,currentUser:action.user, loading: false} // TODO: is a return necessary here? kevin didn't use it\n    case \"ADD_TO_UPVOTED_TWEETS\":\n    return { ...state, upvoted_tweets: [...state.upvoted_tweets, action.tweet]}\n    case \"REMOVE_FROM_UPVOTED_TWEETS\":\n      return {...state, upvoted_tweets: state.upvoted_tweets.filter((tweet)=>tweet.id !== action.tweet.id)}\n    case 'DELETE_TWEET':\n    return { ...state, upvoted_tweets: state.upvoted_tweets.filter(tweet => tweet.id !== action.tweet.id)}\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","\nconst defaultState = \"\"\n\n\nconst topicReducer = (state = defaultState, action) => {\nswitch (action.type) {\n  case \"GET_TOPIC\":\n    return { topic: action.topic};\n  case \"TOPIC_REQUEST_FAILURE\":\n    return { ...state, loading: false };\n  default:\n    return state;\n  }\n};\n\nexport default topicReducer;\n","import { combineReducers } from 'redux';\nimport tweetReducer from './tweetReducer';\nimport hashtagReducer from './hashtagReducer';\nimport userReducer from './userReducer';\nimport topicReducer from './topicReducer';\n\nexport const rootReducer = combineReducers({\n  tweets: tweetReducer,\n  hashtags: hashtagReducer,\n  user: userReducer,\n  topic: topicReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer} from \"./redux/reducers\";\n\nconst defaultState = {\n\n};\n\nconst middleware = [thunk];\n// defaultState,\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App from \"./App\";\nimport store from \"./store\"\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}